generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL") // uses connection pooling
  // directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model item_categories {
  id          Int      @id @default(autoincrement())
  slug        String   @unique @db.VarChar(255)
  description String
  created_at  DateTime @default(now())
  items       items[]
}

model items {
  id              Int             @id @default(autoincrement())
  title           String          @db.VarChar(255)
  description     String?
  category_id     Int
  tags            tags[]
  created_by      Int
  created_at      DateTime        @default(now())
  users           users           @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  item_categories item_categories @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_items      user_items[]
}

model user_items {
  id          Int      @id @default(autoincrement())
  user_id     Int
  item_id     Int
  rating      Int
  experienced Boolean  @default(false)
  review      String?
  created_at  DateTime @default(now())
  items       items    @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users       users    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id          Int          @id
  name        String       @db.VarChar(255)
  email       String       @unique
  partner_id  Int?
  password    String
  items       items[]
  user_items  user_items[]
  users       users?       @relation("usersTousers", fields: [partner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_users users[]      @relation("usersTousers")
}

model tags {
  id         Int      @id @default(autoincrement())
  name       String
  posts      items[]
  created_at DateTime @default(now())
}
