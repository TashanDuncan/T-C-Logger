generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL") // uses connection pooling
  // directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model ItemCategory {
  id          Int      @id @default(autoincrement())
  slug        String   @unique @db.VarChar(255)
  description String
  created_at  DateTime @default(now())
  items       Item[]
	@@map("item_categories")
}

model Item {
  id              Int             @id @default(autoincrement())
  title           String          @db.VarChar(255)
  description     String?
  category_id     Int
  tags            Tag[]
  created_by      Int
  created_at      DateTime        @default(now())
  users           User           @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  item_categories ItemCategory @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_items      UserItem[]
	@@map("items")
}

model UserItem {
  id          Int      @id @default(autoincrement())
  user_id     Int
  item_id     Int
  rating      Int
  experienced Boolean  @default(false)
  review      String?
  created_at  DateTime @default(now())
  items       Item    @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users       User    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
	@@map("user_items")
}

model User {
  id          Int          @id
  name        String       @db.VarChar(255)
  email       String       @unique
  partner_id  Int?
  password    String
  items       Item[]
  user_items  UserItem[]
  users       User?       @relation("usersTousers", fields: [partner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_users User[]      @relation("usersTousers")
	@@map("users")
}

model Tag {
  id         Int      @id @default(autoincrement())
  name       String
  posts      Item[]
  created_at DateTime @default(now())
	@@map("tags")
}
